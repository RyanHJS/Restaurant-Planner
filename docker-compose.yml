version: "3"

services:
  # frontend:
  #   image: "restaurant-planner-frontend:latest"
  #   build:
  #     context: ./frontend
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - "3000:3000"
  
  backend:
    # Setting an image name avoids the same image being built multiple times.
    image: "restaurant-planner-backend:latest"
    command: npm run dev
    env_file: "./backend/.env"
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mysqlDb
    environment:
      WAIT_HOSTS: mysqlDb:3306    # wait for mysqlDb database to be available  --> implemented in ./backend/Dockerfile
    
      
  # Docker mySql database
  mysqlDb:
    image: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      # - ./backend/config/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/0_init.sql
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    expose:
      - 3306
      
      
      
      
      
      # ignore this ---v
  # cloudsql:
  #   image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.0.0
  #   volumes:
  #     - type: bind
  #       source: ./backend/serviceAccount.json
  #       target: /backend/serviceAccount.json
  #       read_only: true
  #   ports:
  #     - target: 3306
  #       published: 13306
  #   command: --address 127.0.0.1 --port 3306 --credentials-file "/backend/serviceAccount.json" "cmpt372-project-391818:us-central1:restaurant-planner"
      
      